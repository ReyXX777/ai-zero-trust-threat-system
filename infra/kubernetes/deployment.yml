apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-zero-trust-deployment
  labels:
    app: ai-zero-trust
spec:
  replicas: 1  # Adjust based on your desired scaling
  selector:
    matchLabels:
      app: ai-zero-trust
  template:
    metadata:
      labels:
        app: ai-zero-trust
    spec:
      containers:
        - name: zookeeper
          image: wurstmeister/zookeeper:3.4.6
          ports:
            - containerPort: 2181
          environment:
            - name: ZOOKEEPER_CLIENT_PORT
              value: "2181"
            - name: ZOOKEEPER_TICK_TIME
              value: "2000"
            - name: ZOOKEEPER_SYNC_LIMIT
              value: "2"
        - name: kafka
          image: wurstmeister/kafka:latest
          ports:
            - containerPort: 9092
          environment:
            - name: KAFKA_ADVERTISED_LISTENERS
              value: INSIDE://kafka:9093, OUTSIDE://localhost:9092
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: INSIDE:PLAINTEXT, OUTSIDE:PLAINTEXT
            - name: KAFKA_LISTENER_NAMES
              value: INSIDE, OUTSIDE
            - name: KAFKA_LISTENERS
              value: INSIDE://0.0.0.0:9093, OUTSIDE://0.0.0.0:9092
            - name: KAFKA_LISTENER_PROTOCOL_MAP
              value: INSIDE:PLAINTEXT, OUTSIDE:PLAINTEXT
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper:2181
            - name: KAFKA_ADVERTISED_LISTENER
              value: OUTSIDE://localhost:9092
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL
              value: PLAINTEXT
          ports:
            - containerPort: 9093
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
  labels:
    app: ai-zero-trust
spec:
  selector:
    app: ai-zero-trust
  ports:
    - protocol: TCP
      port: 2181
      targetPort: 2181
  clusterIP: None  # Headless service, used for stateful sets or internal communication

---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  labels:
    app: ai-zero-trust
spec:
  selector:
    app: ai-zero-trust
  ports:
    - protocol: TCP
      port: 9092
      targetPort: 9092
    - protocol: TCP
      port: 9093
      targetPort: 9093
  clusterIP: None  # Headless service for Kafka internal communication

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka-statefulset
spec:
  serviceName: "kafka"
  replicas: 1
  selector:
    matchLabels:
      app: ai-zero-trust
  template:
    metadata:
      labels:
        app: ai-zero-trust
    spec:
      containers:
        - name: kafka
          image: wurstmeister/kafka:latest
          ports:
            - containerPort: 9092
            - containerPort: 9093
          environment:
            - name: KAFKA_ADVERTISED_LISTENERS
              value: INSIDE://kafka:9093, OUTSIDE://localhost:9092
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: INSIDE:PLAINTEXT, OUTSIDE:PLAINTEXT
            - name: KAFKA_LISTENER_NAMES
              value: INSIDE, OUTSIDE
            - name: KAFKA_LISTENERS
              value: INSIDE://0.0.0.0:9093, OUTSIDE://0.0.0.0:9092
            - name: KAFKA_LISTENER_PROTOCOL_MAP
              value: INSIDE:PLAINTEXT, OUTSIDE:PLAINTEXT
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper:2181
            - name: KAFKA_ADVERTISED_LISTENER
              value: OUTSIDE://localhost:9092
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL
              value: PLAINTEXT
          ports:
            - containerPort: 9092
            - containerPort: 9093
  volumeClaimTemplates:
    - metadata:
        name: kafka-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kafka-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - host: localhost
      http:
        paths:
          - path: /kafka
            pathType: Prefix
            backend:
              service:
                name: kafka
                port:
                  number: 9092
